Typing Turtle

Notes

How to handle capitals and punctuation?

Are capitals and punctuation universal concepts?  Certainly for all Roman languages.  
Do other languages have capital-like and punctuation-like concepts with different rules?
Is there a generic way that punctuation could just be handled naturally?
  It depends on how nicely we want them to work.  For example knowing that you put quotes
  around words, we can randomly enquote words.  Knowing that semicolons, periods and 
  commas appear after words also allows us to randomly append them.
  If we don't care, we can just suggest that a) punctuation be taught after the rest
  of the alphabet, and b) native text be given which includes plenty of punctuation.
Is there a generic way that we can handle capitalization?
  It would be nice to just be able to capitalize the beginning of any word.
  OTOH, acronyms and stuff would be nice to include and those will only come from 
  wordlists.

The answer to both: Right now, I think it's best to just encourage expansive word lists.
Note that this means that we have top *stop* stripping non-alpha characters from words
as we read them in!

BTW, after all that work, when are we going to teach Enter?

First Release
+ Status message on the main screen.  "You unlocked a new lesson!" for example.  Eventually have the turtle 'say' it.
+ Graphical WPM and accuracy meters.
+ Make medal WPM adjustable somehow?  Perhaps a settable Goal WPM?
+ Sound effects.
  + Welcome to the activity sound.
  + Speed up / slow down sounds when WPM crosses threshold: Slow, Medium, Fast.
  + Medal award sounds for each medal type: None, Bronze, Silver, Gold.  Applause sound.
  + Incorrect key pressed tick sound. 

Future Release
+ Highlight regions of keyboard, color by finger.
+ Goal support with progress reporting.  WPM, Accuracy, Entire keyboard learned, etc.
+ Keymap showing skill per key.  Star icons on keys that are mastered.
+ History screen: List of lessons completed with statistics.
+ Progress screen: Line graphs of Accuracy, WPM over time.
+ Lesson editor activity or mode.

Balloon Game

- Game finished popup, displays score and medal text.
- Fix flickering
+ Improve graphics.
- Support for displaying high score in home screen.

Paper Airplane Game

+ Create AirplaneGameScreen class (use gtk.Layout?).
+ Implement bottom-scrolling text display.
+ Airplane toss animation (or maybe takeoff from runway?).  Starts with first letter.
+ Floating airplane momentum based on words per minute.
+ Scrolling background graphics.
+ Finish line graphics.
+ Game finished popup, displays score and medal text.

Race Game

+ Create RaceGameScreen class (use gtk.Layout?).
+ Copy whatever Prakhar's got, finish it up.
+ Game finished popup, displays score and medal text.
